@model LaptopMVC.Models.tb_product

@{
    ViewBag.Title = "Thêm mới";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section naviheader{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/homeadmin" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            @Html.ActionLink("Thêm mới", "Create", null, new { @class = "nav-link" })
        </li>
    </ul>
}


<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Thêm mới Sản phẩm</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/admin/tb_product">Home</a></li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Thông tin thêm mới Sản phẩm</h3>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-12">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.TextBoxFor(model => model.title, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.TextAreaFor(model => model.description, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.detail, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.TextAreaFor(model => model.detail, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.detail, "", new { @class = "text-danger" })

                            </div>
                          
                            <div class="form-group">
                                @Html.LabelFor(model => model.cpu, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("cpu", null, "----Select cpu of product----", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.cpu, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ram, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("ram", null, "----Select ram of product----", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ram, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.screen, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("screen", null, "----Select screen of product----", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.screen, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.harddrive, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("harddrive", null, "----Select harddrive of product----", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.harddrive, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.pricesale, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.pricesale, new { htmlAttributes = new { @class = "form-control", @Value = 0 } })
                                    @Html.ValidationMessageFor(model => model.pricesale, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control", @Value = 1 } })
                                    @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.isSale, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.isSale)
                                        @Html.ValidationMessageFor(model => model.isSale, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.isHot, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.isHot)
                                        @Html.ValidationMessageFor(model => model.isHot, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.idProductCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("idProductCategory", null, "----Select product categories----", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idProductCategory, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.isActive)
                                        @Html.ValidationMessageFor(model => model.isActive, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Tạo mới" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <!-- /.card-body -->
        <div class="card-footer">
            <div>
                @Html.ActionLink("Quay lại", "Index", null, new { @class = "btn btn-danger" })
            </div>
        </div>
        <!-- /.card-footer-->
    </div>
    <!-- /.card -->

</section>

